export const runtime = "nodejs";

// app/api/pullsheet/route.ts
import { NextResponse } from "next/server";
import { createClient } from "@supabase/supabase-js";

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

export async function GET(req: Request) {
  const { searchParams } = new URL(req.url);
  const jobCode = searchParams.get("jobCode");
  if (!jobCode) return NextResponse.json({ error: "Missing jobCode" }, { status: 400 });

  // job
  const { data: jobRows, error: jobErr } = await supabase
    .from("jobs")
    .select("id, code, title, venue, start_at, end_at")
    .eq("code", jobCode)
    .limit(1);
  if (jobErr || !jobRows?.length) {
    return NextResponse.json({ error: jobErr?.message || "Job not found" }, { status: 404 });
  }
  const job = jobRows[0];

  // latest pull sheet for job
  const { data: psRows, error: psErr } = await supabase
    .from("pull_sheets")
    .select("id, code, status, created_at")
    .eq("job_id", job.id)
    .order("created_at", { ascending: false, nullsFirst: false })
    .limit(1);
  if (psErr || !psRows?.length) {
    return NextResponse.json({ error: psErr?.message || "No pull sheet for job" }, { status: 404 });
  }
  const ps = psRows[0];

  // items
  const { data: items, error: itemErr } = await supabase
    .from("pull_sheet_items")
    .select("qty_requested, qty_pulled, item_name, product_id, products!inner(sku,name)")
    .eq("pull_sheet_id", ps.id);
  if (itemErr) return NextResponse.json({ error: itemErr.message }, { status: 400 });

  const rows = (items || []).map((r) => {
    const sku = (r as any)?.products?.sku ?? "";
    const name = (r as any)?.products?.name ?? r.item_name ?? "";
    return { sku, name, qty_req: r.qty_requested ?? 0, qty_pulled: r.qty_pulled ?? 0 };
  });

  const html = `<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Pull Sheet – ${job.code}</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 24px; }
    h1 { margin: 0 0 4px 0; }
    .meta { color:#555; margin-bottom: 16px; }
    table { width:100%; border-collapse: collapse; }
    th, td { border:1px solid #ddd; padding:8px; }
    th { background:#f4f4f4; text-align:left; }
    .badge { display:inline-block; padding:2px 8px; border-radius:12px; background:#000; color:#fff; font-size:12px; }
    .small { font-size:12px; color:#666; }
    .footer { margin-top:16px; font-size:12px; color:#777; }
  </style>
</head>
<body>
  <h1>Pull Sheet <span class="badge">${ps.code}</span></h1>
  <div class="meta">
    <div><b>Job:</b> ${job.code} – ${job.title}</div>
    <div><b>Venue:</b> ${job.venue || ""}</div>
    <div><b>Window:</b> ${job.start_at || ""} → ${job.end_at || ""}</div>
  </div>

  <table>
    <thead>
      <tr>
        <th style="width:140px">SKU</th>
        <th>Item</th>
        <th style="width:110px">Qty Req</th>
        <th style="width:110px">Qty Pulled</th>
      </tr>
    </thead>
    <tbody>
      ${rows.map(r => `
        <tr>
          <td>${r.sku}</td>
          <td>${r.name}</td>
          <td>${r.qty_req}</td>
          <td>${r.qty_pulled}</td>
        </tr>
      `).join("")}
    </tbody>
  </table>

  <div class="footer">
    Generated by Bright Audio · ${new Date().toLocaleString()}
  </div>
</body>
</html>`;

  return new Response(html, { headers: { "Content-Type": "text/html; charset=utf-8" } });
}
